#!/run/current-system/sw/bin/guile \
-e main -s
!#

(use-modules (personal scripting))
(use-modules (site pipe))

(use-modules (ice-9 match))

(define curtag (system-output "herbstclient attr tags.focus.name"))

(define tags
  (->> (string-split (system-output "herbstclient tag_status")
                     char-whitespace?)
       (filter (lambda (s) (not (string-null? s))))))

(define (xcolor-name xresource)
  (substring xresource
             (+ 1 (string-index xresource #\.))
             (string-index xresource #\:)))

(define (xcolor-value xresource)
  (->> (substring xresource (+ 1 (string-index xresource #\:)))
       (string-trim-both)))

(define xcolors
  (let ((xcolors '()))
    (->> (string-split (system-output "xrdb -query")
                       (lambda (c) (char=? c #\newline)))
         (filter (lambda (xresource) (string-prefix? "polybar." xresource)))
         (map (lambda (xresource)
                (set! xcolors (acons (xcolor-name xresource)
                                     (xcolor-value xresource)
                                     xcolors))
                xresource)))
    xcolors))

(define (tag-name tag)
  (string-ref tag 1))

(define (tag-status tag)
  (string-ref tag 0))

(define (focused-tag? tags)
  (not (->> (filter (lambda (tag) (equal? (tag-name tag) "#")) tags)
            (null?))))

(define (tag-name->icon name)
  (match name
         ("1" "")
         ("2" "")
         ("3" "")
         ("4" "")
         ("5" "")
         ("6" "")
         ("7" "")
         ("8" "")
         ("9" "")
         ("0" "")
         (_   "")))

(define (tag-string tag)
  (let ((padding " "))
    (if (equal? (tag-name tag) curtag)
        ())
    (string-append padding padding)
  ))

(define (main args)
  (display tags))
