#!/run/current-system/sw/bin/guile \
-e main -s
!#

(use-modules (ice-9 match))
(use-modules (srfi srfi-1))

(use-modules (personal scripting))
(use-modules (site pipe))

(define (xresource-name xresource)
  (substring xresource
             (+ 1 (string-index xresource #\.))
             (string-index xresource #\:)))

(define (xresource-value xresource)
  (->> (substring xresource (+ 1 (string-index xresource #\:)))
       (string-trim-both)))

;; Faster to define these globally just once, rather than have to recalculate
;; them over and over each time they need to be checked/used.
(define polybar-xresources
  (->> (string-split (system-output "xrdb -query")
                     (lambda (c) (char=? c #\newline)))
       (filter (lambda (xresource) (string-prefix? "polybar." xresource)))
       (fold (lambda (xresource alist)
               (acons (xresource-name xresource)
                      (xresource-value xresource) alist)) '())))

(define clients
  (-> (system-output "herbstclient attr tags.focus.client_count")
      (string-trim-right #\newline)
      (string->number)))

(define curtag
  (-> (system-output "herbstclient attr tags.focus.name")
      (string-trim-right #\newline)))

(define (tag-name tag)
  (string (string-ref tag 1)))

(define (curtag? tag)
  (equal? (tag-name tag) curtag))

(define (tag-status tag)
  (match (string (string-ref tag 0))
         ("!" 'urgent)
         ("#" (if (zero? clients) 'free 'occupied))
         (":" 'occupied)
         ("." 'free)))

(define (tag-status->icon status)
  (match status
         ('free "")
         ('urgent "")
         ('occupied "")))

(define (format-xresource type key)
  (string-append "%{" (symbol->string type)
                 (assoc-ref polybar-xresources key) "}"))

(define (tag-string tag)
  (let ((padding "   ")
        (bg "")
        (fg "")
        (u "")
        (reset "%{B-}%{F-}%{u#00ffffff}")
        (status (tag-status tag)))
    (when (curtag? tag)
          (set! bg (format-xresource 'B "date_background"))
          (set! u (format-xresource 'u (match status
                                              ('free "faded_foreground")
                                              ('urgent "color1")
                                              ('occupied "foreground")))))
    (match status
           ('free (set! fg (format-xresource 'F "faded_foreground")))
           ('urgent (begin
                      (set! fg (format-xresource 'F "color1"))
                      (set! u (format-xresource 'u "color1"))))
           (_ #t))
    (string-append bg fg u
                   padding
                   (tag-status->icon status)
                   padding
                   reset)))

(define (main args)
  (let ((tags (->> (string-split (system-output "herbstclient tag_status")
                                 char-whitespace?)
                   (filter (lambda (s) (not (string-null? s)))))))
    (display (string-join (map tag-string tags) ""))))
